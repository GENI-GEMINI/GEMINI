#!/usr/bin/perl

use strict;
use warnings;

use Socket;
use Sys::Hostname;

my $hostname  = hostname;

my ( $localname ) = split( /\./, $hostname );

my $domain = $hostname;
$domain =~ s/^[^\.]+//;
 
my @node_entries = ();

# Make sure we're on the list, even if we have no interfaces.
my $packed_ip = gethostbyname( $hostname );
push @node_entries, inet_ntoa( $packed_ip ) . "\t" . $hostname;

open(HOSTS, "< /etc/hosts") or die $!;
while(<HOSTS>) {
    next if m/localhost/;
    next if m/^\s*$/;
    
    # XXX: This is emulab specific. Nodes in slice with interfaces
    #   will have an entry added to /etc/hosts in the form
    #   IP <node>-<link> <node>-<port> [<node>]
    next unless m/^[0-9\.]+\s+[\w-]+\s+[\w-]+\s+([\w-]+)$/;
    
    my $node = $1;
    
    # We already added ourselves
    next if $node eq $localname;
    
    $node = $node . $domain;
    
    # Resolve node's hostname to its control plane IP
    $packed_ip = gethostbyname( $node );
    
    next unless defined $packed_ip;
    
    push @node_entries, inet_ntoa( $packed_ip ) . "\t" . $node;
}
close(HOSTS);

open(HOSTS, ">> /etc/hosts") or die $!;
print HOSTS "$_\n" for @node_entries;
close(HOSTS);
