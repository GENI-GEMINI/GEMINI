/** Generated by xsd2c*/
#ifndef __CallFunc_H__
#define __CallFunc_H__


#include "CallVar.h"
#include "CallVar.h"

#ifndef _DESERIALIZER_DISABLE_
	#include <libxml/parser.h>
#endif


#define TO_CALLFUNC(derived) (derived->__base) 


#ifdef __cplusplus
extern "C" {
#endif 


/**
 *	OBJECT: CallFunc
 */
struct CallFunc
{
	char* name;
	struct CallVar_List* in_head;
	struct CallVar_List* in_tail;
	struct CallVar* out;
};

/**
 *	LIST: CallFunc_List
 */
struct CallFunc_List
{
	struct CallFunc* value;
	struct CallFunc_List* next;
};


struct CallFunc* CallFunc_Create();
void CallFunc_Free(struct CallFunc* obj);
void CallFunc_Sax_Serialize(struct CallFunc* obj,
		 const char *root_element_name,
		 void (*OnStartElement)(const char* element_name, int attr_count, char **keys, char **values, void* userData),
		 void (*OnCharacters)(const char* element_name, const char* chars, void* userData),
		 void (*OnEndElement)(const char* element_name, void* userData),
		 void* userData);

#ifndef _DESERIALIZER_DISABLE_
struct CallFunc* CallFunc_Deserialize(xmlNodePtr xmlRoot);
#endif

void CallFunc_Set_name(struct CallFunc* obj, const char* name);
void CallFunc_Set_out(struct CallFunc* obj, struct CallVar* out);
void CallFunc_Add_in(struct CallFunc* obj, struct CallVar* in);
char* CallFunc_Get_name(struct CallFunc* obj);
struct CallVar_List* CallFunc_Get_in(struct CallFunc* obj);
struct CallVar* CallFunc_Get_out(struct CallFunc* obj);


#ifdef __cplusplus
};
#endif /*__cplusplus*/



#endif
