<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://docbook.org/xml/4.2/docbookx.dtd">
<article>

  <articleinfo>
    <title>perfSONAR Echo Protocol</title>

    <author>
      <firstname>J.</firstname>
      <surname>Zurawski</surname>
      <affiliation>
        <orgname>Internet2</orgname>
        <address>   
          <email>zurawski@internet2.edu</email>
        </address>
      </affiliation>
    </author>

    <copyright>
      <year>2007</year>
      <year>2008</year>
      <holder>Internet2</holder>
    </copyright>

  </articleinfo>

  <section id="changes" xreflabel="Document Changes">
    <title>Document Changes</title>

    <table frame="all" align="center" halign="center" width="80%"  id="table.1">
      <title>Change Log</title>
      <tgroup cols="1" align="left" colsep="1" rowsep="1">
        <colspec colnum="1" colname="c1" width="10%"/>
        <colspec colnum="2" colname="c2" width="10%"/>
        <colspec colnum="3" colname="c3" width="50%"/>
        <colspec colnum="4" colname="c4" width="30%"/>
        <thead>
          <row>
            <entry>Version</entry>
            <entry>Date</entry>
            <entry>Description</entry>
            <entry>Author(s)</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1.0</entry>
            <entry>12/18/2007</entry>
            <entry>Initial Preparation</entry>
            <entry>J. Zurawski</entry>
          </row>
          <row>
            <entry>1.1</entry>
            <entry>1/3/2008</entry>
            <entry>Removal of perfSONAR language, addition of new URIs</entry>
            <entry>J. Zurawski</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
   
  </section>


  <section id="introduction" xreflabel="Introduction">
    <title>Introduction</title>
    
    <para>
      This work describes a simple communication protocol used to determine the
      validity and functionality of services within the
      <citation>perfSONAR</citation> framework.  The sole purpose of certain
      <emphasis>perfSONAR</emphasis> services is to aid in the discovery and
      protection of the enterprise.  The tasks undertaken by these critical
      components also require sound communication protocols based on the same
      <citation>XML</citation> formats used to exchange and store measurement
      data as defined by the <citation>NM-WG</citation> in the
      <citation>OGF</citation>.
    </para>

    <para>
      The <emphasis>Echo Protocol</emphasis> is currently used by client
      applications as well as other services to ascertain the
      <emphasis>liveness</emphasis> of a given <emphasis>perfSONAR</emphasis>
      service instance.  A well formatted <command>EchoRequest</command>
      message, when sent to any <emphasis>perfSONAR</emphasis> service, should
      trigger a similar <command>EchoResponse</command>.  This interaction
      allows a client or service to gauge the responsiveness of a service; the
      potential to learn more information is also available for services who
      wish to provide it.  
    </para>
    
    <para>  
      The remainder of this document will explain the origins of this command
      protocol in <xref linkend="architecture" />, detailed descriptions
      regarding syntax and semantics in <xref linkend="protocol" />, an overview
      of status in <xref linkend="result_codes" />, and finally points of
      extension will be discussed in <xref linkend="protocol_extension" />.
    </para>
    
  </section>

  <section id="architecture" xreflabel="Architecture">
    <title>System Architecture</title>
      
    <para>
      To ensure availability, each <emphasis>perfSONAR</emphasis> service
      <command>must</command> be able to respond to simple queries regarding
      status.  Services that fail to answer a direct question may be
      experiencing difficulty, and therefore may not be able to complete
      interaction with interested parties.  Client applications, services, or
      external monitoring tools (such as <citation>SmokePing</citation>) can
      use this simple method to quickly come to conclusions regarding framework
      availability.  
    </para>
    
    <para>
      All perfSONAR services must contain the ability to respond to the most 
      basic of <emphasis>Echo Protocol</emphasis> messages as described by this
      document.  The minimum requirement of an
      <emphasis>Echo Protocol</emphasis> exchange is simply responding to a
      properly encoded request.  <emphasis>Echo Protocol</emphasis> extensions
      may be built from this general protocol to elicit additional functionality
      on a service by service basis to do tasks such as test the capabilities of
      the service, receive statistics, or monitor erroneous behavior.  The
      assignment of these other tasks within an <command>EchoRequest</command>
      message is valid provided that the basic structure is not compromised.
    </para>
    
  </section>

  <section id="protocol" xreflabel="Echo Protocol">
    <title>Echo Protocol</title>
    
    <para>
      The core functionality of the <emphasis>Echo Protocol</emphasis> is to 
      provide a simple <emphasis>request</emphasis> and
      <emphasis>response</emphasis> message set capable of delivering
      rudimentary status information.  This protocol for exchange is similar to 
      other types of communication, notably <xref linkend="ping" />. While this
      protocol may seem to be a reinvention of existing tooling, the 
      extension possibility far outweighs the duplication of functionality.
    </para>
    
    <para>
      We present an overview of the messages used in this protocol, including
      both schematic designs and examples for the 
      <xref linkend="request_message" /> and <xref linkend="response_message" />.  
      We conclude with a brief description of where extensions are 
      possible followed by some current examples in 
      <xref linkend="protocol_extension" />.  
    </para>
    
    <section id="request_message" xreflabel="EchoRequest Message">
      <title>EchoRequest Message</title>
    
      <para>
        The <command>EchoRequest</command> message can be initiated by a
        client application or service wanting to know the availability of some
        other service.  The format of this message is minimal with respect to
        other protocol messages as the input is rather simple.  
      </para>
      
      <para>
        All protocols used within <emphasis>perfSONAR</emphasis> are based on
        recommendations from the <emphasis>OGF</emphasis>'s
        <emphasis>NM-WG</emphasis>, and have been initially described
        in <citation>Zurawski06Scalable</citation>.  The basic format described
        in this work for measurements has been adapted as a template for use in
        service communication as well, keeping the concept of 
        <xref linkend="metadata" /> and <xref linkend="data" /> intact.  
      </para>

      <section id="request_examples" xreflabel="EchoRequest Examples">
        <title>EchoRequest Examples</title>

        <programlisting>
          <![CDATA[
            <?xml version="1.0" encoding="UTF-8"?>
            <nmwg:message type="EchoRequest"
                          id="message.54957485"
                          xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
 
              <nmwg:metadata id="metadata.95438594">
                <nmwg:eventType>
                  http://schemas.perfsonar.net/tools/admin/echo/2.0
                </nmwg:eventType>
              </nmwg:metadata>
 
              <nmwg:data id="data.4856376" metadataIdRef="metadata.95438594"/>
 
            </nmwg:message>
          ]]>
        </programlisting>  
    
        <para>
          This example illustrates the most basic of 
          <command>EchoRequest</command> messages.  All attributes and
          elements, as listed, are required and in the proper namespaces.  A
          description of each element, as well as related attributes follows.
        </para>

        <section id="request_schema_message" xreflabel="Message Element">
          <title>Message Element</title>

          <programlisting>
            <![CDATA[
              <nmwg:message type="EchoRequest"
                            id="STRING"
                            xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <nmwg:metadata />
                <nmwg:data />
              </nmwg:message>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - message</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id, type</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - metadata, data</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>message</emphasis> element serves as a container that
            all subsequent information of a communication must travel in.  There
            are valuable attributes as well as enclosed elements that are
            required for this particular message.
          </para>
          
          <para>
            There are only three acceptable attributes for a message in the 
            <emphasis>Echo Protocol</emphasis>, two of which are present in the
            request message: <emphasis>id</emphasis> and 
            <emphasis>type</emphasis>.  The <emphasis>id</emphasis> attribute 
            can be used to track message state while the 
            <emphasis>type</emphasis> is used to route the message 
            through a service that is capable of handling several.  The 
            <emphasis>type</emphasis> <command>should</command> be either the
            simple string <command>EchoRequest</command> or the URI 
            <command>http://schemas.perfsonar.net/messages/EchoRequest/1.0</command>.
            The later is a new addition to this message type that will allow for
            easier extension when the protocol requires backwards compatibility.
            This type, when used in the message, will look like the following 
            example.
          </para>       

          <programlisting>
            <![CDATA[
              <nmwg:message type="http://schemas.perfsonar.net/messages/EchoRequest/1.0"
                            id="STRING"
                            xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <!-- ... -->
              </nmwg:message>
            ]]>
          </programlisting> 

          <para>
            Within the message element there <command>must</command> always be
            two enclosed elements, a <emphasis>metadata</emphasis> and a 
            <emphasis>data</emphasis>.  These elements, due to their complexity,
            will be explained in <xref linkend="request_schema_metadata" /> and 
            <xref linkend="request_schema_data" />.  
          </para>
         
        </section>

        <section id="request_schema_metadata" xreflabel="Metadata Element">
          <title>Metadata Element</title>

          <programlisting>
            <![CDATA[
              <nmwg:metadata id="STRING"
                             xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <nmwg:eventType />
              </nmwg:metadata>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - metadata</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - eventType</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>metadata</emphasis> element normally contains the 
            <emphasis>static</emphasis> information regarding measurements, and
            in the case of the <emphasis>Echo Protocol</emphasis> contains the
            one static use: execution of the specific
            <emphasis>eventType</emphasis>.  As with the message there are
            specific pieces of information required for this element to be
            effective.
          </para>
          
          <para>
            There is only one acceptable attribute: <emphasis>id</emphasis>.  
            The id attribute can be used to track metadata state, and must
            be utilized by the corresponding
            <xref linkend="request_schema_data" />.  Inside of the element there
            can only be an <xref linkend="request_schema_eventType" />.
          </para>       
         
        </section>
        
        <section id="request_schema_eventType" xreflabel="eventType Element">
          <title>eventType Element</title>

          <programlisting>
            <![CDATA[
              <nmwg:eventType xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                http://schemas.perfsonar.net/tools/admin/echo/2.0
              </nmwg:eventType>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - eventType</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - N/A</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - text</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>eventType</emphasis> element is normally used to
            specify an action for a service or measurement.  We utilize it for
            this role in the <emphasis>Echo Protocol</emphasis> by specifying
            the <emphasis>action</emphasis> of responding to an 
            <command>EchoRequest</command>.  There are no attributes permitted
            for this element, and only text can be used as a child, specifically
            text reporting 
            <command>http://schemas.perfsonar.net/tools/admin/echo/2.0</command>.
          </para>
          
          <para>
            Because this element is currently well defined into a specific role
            and purpose, the eventType is non-negotiable.  Extensions, as 
            discussed in <xref linkend="protocol_extension" />, may be employed
            on a service by service basis to expand this basic specification, as
            long as the role is preserved.  
          </para>             
         
        </section>        
        
        <section id="request_schema_data" xreflabel="Data Element">
          <title>Data Element</title>

          <programlisting>
            <![CDATA[
              <nmwg:data id="STRING" 
                         metadataIdRef="STRING"
                         xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" />
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - data</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id, metadataIdRef</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - N/A</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>data</emphasis> element is reserved for the more 
            <emphasis>dynamic</emphasis> aspects of measurements, namely 
            <emphasis>time</emphasis> and <emphasis>value</emphasis> pairs.  The
            other primary use of data can be to serve as a 
            <emphasis>trigger</emphasis>.
          </para>
          
          <para>
            A <emphasis>trigger</emphasis>, loosely defined, is a way to indicate
            that a service needs to act on a specific
            <emphasis>metadata</emphasis>.  In many cases a message may be sent
            containing a number of <emphasis>metadata</emphasis> elements 
            <command>m</command> and a differing number of
            <emphasis>data</emphasis> elements <command>d</command>.  This is
            due to the notion of <xref linkend="chaining" /> where
            <emphasis>metadata</emphasis> descriptions may be
            <emphasis>linked</emphasis> together via <emphasis>id</emphasis>
            values.  The simple way for a service to decide which
            <emphasis>metadata</emphasis> elements must be acted upon is to
            insert empty <emphasis>data</emphasis> elements that will 
            <emphasis>trigger</emphasis> an internal action.  
          </para>
          
          <para>
            There are only two acceptable attributes for this element: 
            <emphasis>id</emphasis> and <emphasis>metadataIdRef</emphasis>.  
            These attributes can be used to track state information, particularly
            <emphasis>metadataIdRef</emphasis> which is used in linking the 
            <xref linkend="request_schema_metadata" /> to the 
            <xref linkend="request_schema_data" />.  
          </para>         
         
        </section>
        
      </section>

      <section id="request_schema" xreflabel="EchoRequest Schema">
        <title>EchoRequest Schema</title>

        <para>
          An XML <xref linkend="schema" /> is typically used to describe 
          the structure and internal content of a given XML instance.  This 
          description can sometimes be expressed in XML itself.  This 
          abstract is generally created to allow programmatic validation of 
          XML instances and to protect a service from receiving a poorly 
          constructed message.  
        </para>
        
        <para>
          Two schema definitions are presented here, the first being the native
          form of all <emphasis>NM-WG</emphasis> schemata written in the
          <citation>RELAX-NG</citation> language and the second being a derived
          version written in <citation>XSD</citation>.
        </para>

        <section id="request_schema_relax" xreflabel="RELAX-NG">
          <title>RELAX-NG</title>        

          <para>
            <emphasis>NM-WG</emphasis> schemata is always expressed in terms of
            the RELAX-NG schema language.  This tool, unlike similar XML schema 
            languages, does not utilize XML markup.  The syntax is similar 
            to that of a regular language, and allows for a rather compact 
            description.  The following describes the 
            <command>EchoRequest</command> schema.  Note that this 
            <command>will</command> only validate
            <emphasis>EchoRequest</emphasis> messages.  Other schemas can be
            found in <citation>NMWG-Schema</citation>.
          </para>

          <programlisting>
            <![CDATA[
              namespace nmwg="http://ggf.org/ns/nmwg/base/2.0/"

              start = 
                element nmwg:message { 
                  attribute id { xsd:string } &
                  attribute type { 
                    "EchoRequest" |
                    "http://schemas.perfsonar.net/messages/EchoRequest/1.0"
                  } &
                  element nmwg:metadata {
                    attribute id { xsd:string } &
                    element nmwg:eventType { 
                      "http://schemas.perfsonar.net/tools/admin/echo/2.0"
                    }
                  } &
                  element nmwg:data {
                    attribute id { xsd:string } &
                    attribute metadataIdRef { xsd:string }
                  }
                }
            ]]>
          </programlisting>  

        </section>

        <section id="request_schema_xsd" xreflabel="XSD">
          <title>XSD</title>        

          <para>
            This particular description was produced using tools such as 
            <citation>MSV</citation> and <citation>Trang</citation> to 
            programatically convert between schema languages.  XSD is a more
            widely accepted schema format for validation, thus we present
            this definition for use in <emphasis>perfSONAR</emphasis> services.  
          </para>

          <programlisting>
            <![CDATA[
              <?xml version="1.0" encoding="UTF-8"?>
              <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
                         elementFormDefault="qualified" 
                         targetNamespace="http://ggf.org/ns/nmwg/base/2.0/" 
                         xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <xs:element name="message">
                  <xs:complexType>
                    <xs:all>
                      <xs:element ref="nmwg:metadata"/>
                      <xs:element ref="nmwg:data"/>
                    </xs:all>
                    <xs:attribute name="id" use="required" type="xs:string"/>
                    <xs:attribute name="type" use="required">
                      <xs:simpleType>
                        <xs:restriction base="xs:token">
                          <xs:enumeration value="EchoRequest"/>
                          <xs:enumeration value="http://schemas.perfsonar.net/messages/EchoRequest/1.0"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
                <xs:element name="metadata">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element ref="nmwg:eventType"/>
                   </xs:sequence>
                    <xs:attribute name="id" use="required" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
                <xs:element name="eventType">
                  <xs:simpleType>
                    <xs:restriction base="xs:token">
                      <xs:enumeration value="http://schemas.perfsonar.net/tools/admin/echo/2.0"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="data">
                  <xs:complexType>
                    <xs:attribute name="id" use="required" type="xs:string"/>
                    <xs:attribute name="metadataIdRef" use="required" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
              </xs:schema>
            ]]>
          </programlisting>  

        </section>
        
      </section>

    </section>


    <section id="response_message" xreflabel="EchoResponse Message">
      <title>EchoResponse Message</title>
    
      <para>
        The <command>EchoResponse</command> message is a reply to a given
        <command>EchoRequest</command> message from a client application or
        service.  Like the <command>EchoRequest</command> the format is
        kept very simple, exposing only a selection of the
        <emphasis>NM-WG</emphasis> work with respect to other
        <emphasis>perfSONAR</emphasis> services.  This simplicity does however
        allow for limited extension, as discussed in 
        <xref linkend="protocol_extension" />.  As discussed in 
        <xref linkend="request_message" />, this response message is also 
        based on recommendations from the <emphasis>NM-WG</emphasis>.
      </para>

      <section id="response_examples" xreflabel="EchoResponse Examples">
        <title>EchoResponse Examples</title>

        <programlisting>
          <![CDATA[
            <?xml version="1.0" encoding="UTF-8"?>
            <nmwg:message type="EchoResponse"
                          id="message.8974364"
                          messageIdRef="message.54957485"
                          xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/"
                          xmlns:nmwgr="http://ggf.org/ns/nmwg/result/2.0/">
 
              <nmwg:metadata id="metadata.3483747">
                <nmwg:eventType>
                  success.echo
                </nmwg:eventType>
              </nmwg:metadata>
 
              <nmwg:data id="data.324625" metadataIdRef="metadata.3483747">
                <nmwgr:datum>
                  The echo request has passed.
                </nmwgr:datum>
              </nmwg:data>
 
            </nmwg:message>
          ]]>
        </programlisting>  
    
        <para>
          This example illustrates the basic form of all of 
          <command>EchoResponse</command> messages.  All attributes and
          elements, as listed, are required and in the proper namespaces.  A
          description of each element, as well as related attributes follows.
        </para>

        <section id="response_schema_message" xreflabel="Message Element">
          <title>Message Element</title>

          <programlisting>
            <![CDATA[
            <nmwg:message type="EchoResponse"
                          id="STRING"
                          messageIdRef="STRING"
                          xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
              <nmwg:metadata />
              <nmwg:data />
            </nmwg:message>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - message</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id, messageIdRef, type</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - metadata, data</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>message</emphasis> element, as in the
            <xref linkend="request_message" /> serves as a container that all
            subsequent information of a communication will travel in.
          </para>
          
          <para>
            There are only three acceptable attributes for a message in the 
            <emphasis>Echo Protocol</emphasis>, all of which are present in 
            the response message: <emphasis>id</emphasis>, 
            <emphasis>messageIdRef</emphasis>, and <emphasis>type</emphasis>.  
            The <emphasis>id</emphasis> and <emphasis>messageIdRef</emphasis> 
            attributes can be used to track message state while the 
            <emphasis>type</emphasis> is used to route the message through a 
            service that is capable of handling several.  The 
            <emphasis>messageIdRef</emphasis> is an optional attribute that
            should be annotated with the <emphasis>id</emphasis> value of the
            triggering <command>EchoRequest</command> message.  The 
            <emphasis>type</emphasis> <command>should</command> be either the
            simple string <command>EchoResponse</command> or the URI 
            <command>http://schemas.perfsonar.net/messages/EchoResponse/1.0</command>.
            The later is a new addition to this message type that will allow for
            easier extension when the protocl requires backwards compatibility.
            This type, when used in the message, will look like the following 
            example.
          </para>       

          <programlisting>
            <![CDATA[
              <nmwg:message type="http://schemas.perfsonar.net/messages/EchoResponse/1.0"
                            id="STRING"
                            xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <!-- ... -->
              </nmwg:message>
            ]]>
          </programlisting>           
          
          
         
          <para>
            Much like <xref linkend="request_message" />, within the message
            element there <command>must</command> always be
            two enclosed elements, a <emphasis>metadata</emphasis> and a 
            <emphasis>data</emphasis>.  These elements, due to their complexity,
            will be explained in <xref linkend="response_schema_metadata" /> and 
            <xref linkend="response_schema_data" />.  
          </para>
         
        </section>

        <section id="response_schema_metadata" xreflabel="Metadata Element">
          <title>Metadata Element</title>

          <programlisting>
            <![CDATA[
              <nmwg:metadata id="STRING"
                             xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <nmwg:eventType />
              </nmwg:metadata>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - metadata</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - eventType</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>metadata</emphasis> element normally contains the 
            <emphasis>static</emphasis> information regarding measurements, and
            in the case of this protocol contains the one static use: results of
            the execution of the <command>EchoRequest</command>.  As with the
            message there are specific pieces of information required for this
            element to be effective.
          </para>
          
          <para>
            There is only one acceptable attribute: <emphasis>id</emphasis>.  
            The id attribute can be used to track metadata state, and must
            be utilized by the <xref linkend="response_schema_data" />.  Inside
            of the element there can only be an 
            <xref linkend="response_schema_eventType" />.
          </para>       
         
        </section>
        
        <section id="response_schema_eventType" xreflabel="eventType Element">
          <title>eventType Element</title>

          <programlisting>
            <![CDATA[
              <nmwg:eventType xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                STRING
              </nmwg:eventType>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - eventType</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - N/A</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - text</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>eventType</emphasis> element is normally used to
            specify an action for a service or measurement.  We utilize it for
            this role in the <emphasis>Echo Protocol</emphasis> by specifying
            the <emphasis>action</emphasis> of a response to an 
            <command>EchoRequest</command>.  There are no attributes permitted
            for this element, and only text can be used as a child, specifically
            text reporting the status of the transaction. A complete list of
            <emphasis>available</emphasis> status strings is availble in
            <xref linkend="result_codes" />.
          </para>  
         
        </section>        
        
        <section id="response_schema_data" xreflabel="Data Element">
          <title>Data Element</title>

          <programlisting>
            <![CDATA[
              <nmwg:data id="STRING" 
                         metadataIdRef="STRING"
                         xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <nmwgr:datum xmlns:nmwgr="http://ggf.org/ns/nmwg/result/2.0" />
              </nmwg:data>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - data</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id, metadataIdRef</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - datum</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>data</emphasis> element is reserved for the more 
            <emphasis>dynamic</emphasis> aspects of measurements, namely 
            <emphasis>time</emphasis> and <emphasis>value</emphasis> pairs.
            Although we are not reporting a measurement in this case, we are
            sending back status information.  This information is delivered
            in a <emphasis>response</emphasis> 
            <xref linkend="response_schema_datum" />.
          </para>
          
          <para>
            There are only two acceptable attributes for this element: 
            <emphasis>id</emphasis> and <emphasis>metadataIdRef</emphasis>.  
            These attributes can be used to track state information, particularly
            <emphasis>metadataIdRef</emphasis> which is used in linking the 
            <emphasis>metadata</emphasis> to the <emphasis>data</emphasis>.  
          </para>         
         
        </section>

        <section id="response_schema_datum" xreflabel="Datum Element">
          <title>Datum Element</title>

          <programlisting>
            <![CDATA[
              <nmwgr:datum xmlns:nmwgr="http://ggf.org/ns/nmwg/result/2.0">
                TEXT
              </nmwgr:datum>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - datum</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/result/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - value</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - text</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>   
          
          <para>
            The <emphasis>datum</emphasis> element describes measurements in
            most circumstances; the intent in the
            <emphasis>Echo Protocol</emphasis> is to report back a human
            readable status message.  There is only one possible attribute
            accepted for this element, <emphasis>value</emphasis>, and it may be
            used in place of an enclosed text element.  The text could be
            any message the service wishes to return.
          </para>
          
        </section>

      </section>

      <section id="response_schema" xreflabel="EchoResponse Schema">
        <title>EchoResponse Schema</title>

        <para>
          As described in <xref linkend="request_schema" />, the XML schema
          description for the <command>EchoResponse</command> will
          be presented in two formats, the second being a mechanical translation
          of the first.  
        </para>

        <section id="response_schema_relax" xreflabel="RELAX-NG">
          <title>RELAX-NG</title>        

          <para>
            Similar to the <command>EchoRequest</command> RELAX-NG 
            description, this schema fragment offers only the bare essentials
            for validating this message type.
          </para>

          <programlisting>
            <![CDATA[
              namespace nmwg="http://ggf.org/ns/nmwg/base/2.0/"
              namespace nmwgr="http://ggf.org/ns/nmwg/result/2.0/"
              
              start = 
                element nmwg:message { 
                  attribute id { xsd:string } &
                  attribute messageIdRef { xsd:string }? &
                  attribute type { 
                    "EchoResponse" |
                    "http://schemas.perfsonar.net/messages/EchoResponse/1.0"
                  } &
                  element nmwg:metadata {
                    attribute id { xsd:string } &
                    element nmwg:eventType { 
                      xsd:string
                    }
                  } &
                  element nmwg:data {
                    attribute id { xsd:string } &
                    attribute metadataIdRef { xsd:string } &
                    element nmwgr:datum {
                      xsd:string |
                      attribute value { xsd:string }
                    }
                  }
                }
            ]]>
          </programlisting>  

        </section>

        <section id="response_schema_xsd" xreflabel="XSD">
          <title>XSD</title>        

          <para>
            Similar to the <command>EchoRequest</command> XSD 
            description, this particular version was converted from 
            RELAX-NG into XSD.   
          </para>

          <para>
            <command>echo.xsd</command>:
          </para>

          <programlisting>
            <![CDATA[
              <?xml version="1.0" encoding="UTF-8"?>
              <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ggf.org/ns/nmwg/base/2.0/" xmlns:nmwgr="http://ggf.org/ns/nmwg/result/2.0/" xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <xs:import namespace="http://ggf.org/ns/nmwg/result/2.0/" schemaLocation="nmwgr.xsd"/>
                <xs:element name="message">
                  <xs:complexType>
                    <xs:all>
                      <xs:element ref="nmwg:metadata"/>
                      <xs:element ref="nmwg:data"/>
                    </xs:all>
                    <xs:attribute name="id" use="required" type="xs:string"/>
                    <xs:attribute name="messageIdRef" type="xs:string"/>
                    <xs:attribute name="type" use="required">
                      <xs:simpleType>
                        <xs:restriction base="xs:token">
                          <xs:enumeration value="EchoResponse"/>
                          <xs:enumeration value="http://schemas.perfsonar.net/messages/EchoResponse/1.0"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
                <xs:element name="metadata">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element ref="nmwg:eventType"/>
                    </xs:sequence>
                    <xs:attribute name="id" use="required" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
                <xs:element name="eventType" type="xs:string"/>
                <xs:element name="data">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element ref="nmwgr:datum"/>
                    </xs:sequence>
                    <xs:attribute name="id" use="required" type="xs:string"/>
                    <xs:attribute name="metadataIdRef" use="required" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
              </xs:schema>
            ]]>
          </programlisting>  

          <para>
            <command>nmwgr.xsd</command>:
          </para>

          <programlisting>
            <![CDATA[
              <?xml version="1.0" encoding="UTF-8"?>
              <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ggf.org/ns/nmwg/result/2.0/" xmlns:nmwgr="http://ggf.org/ns/nmwg/result/2.0/" xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                <xs:import namespace="http://ggf.org/ns/nmwg/base/2.0/" schemaLocation="echo.xsd"/>
                <xs:element name="datum">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:restriction base="xs:anyType">
                        <xs:simpleType>
                          <xs:union memberTypes="xs:string">
                            <xs:simpleType>
                              <xs:restriction base="xs:token">
                                <xs:length value="0"/>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:union>
                        </xs:simpleType>
                        <xs:attribute name="value" type="xs:string"/>
                      </xs:restriction>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>
              </xs:schema>
            ]]>
          </programlisting>
          
        </section>
        
      </section>

    </section>


    <section id="result_codes" xreflabel="Result Codes">
      <title>Result Codes</title>
      
      <para>
        There are currently two hierarchical systems in use to return status
        information about services.  Each of these approaches takes into account
        the facts that there are many diverse services as well as different
        status messages that may be returned, but the newer of the approaches
        also allows for versioning and backwards compatibility that the original
        attempt did not consider.  The original system <command>must</command>
        continue to be supported by all services for the foreseeable future, while
        a slow phase in of the latest eventTypes is attempted.  
      </para>

      <para>
        The original system, currently used by all
        <emphasis>perfSONAR</emphasis> services and explained in
        <citation>Result Codes</citation>, relies on a static tree of status
        information that is branched first by general features (i.e. 
        <emphasis>success</emphasis>, <emphasis>error</emphasis>) and later
        by more specific characteristics such as service and error type.  This
        hierarchy is however missing the ability to offer versions of different
        codes that would have the ability to become forward or backwards
        compatible and is not in the well known URI format used by other
        eventTypes.
      </para>        

      <programlisting>
        <![CDATA[
          success.
                  echo
                  ls.
                     something
                     something_else
          error.
                  echo
                  ma.
                     something
                     something_else                      
        ]]>
      </programlisting>  

      <para>  
        The most recent description of this status paradigm follows the URI
        syntax already in use by other eventTypes and does allow version numbers
        to be assigned to the various messages.  This will allow services to
        pick and choose which versions they may support more readily.  
      </para>

      <programlisting>
        <![CDATA[
          http://schemas.perfsonar.net/status/
                                              success/
                                                      echo/
                                                           1.0
                                                      ls/
                                                         something/
                                                                   1.0
                                                         something_else/
                                                                        1.0
                                                                        1.1
                                              error/
                                                    echo/
                                                         1.0
                                                    ma/
                                                       something/
                                                                 1.0
                                                                 1.1
                                                       something_else/
                                                                      1.0                                               
        ]]>
      </programlisting>  
          
    </section>


    <section id="protocol_extension" xreflabel="Extensions">
      <title>Extensions</title>
      
      <para>
        There are two avenues for extension within the 
        <emphasis>Echo Protocol</emphasis> as described in this document.  It 
        is possible to manipulate the values contained within the
        <emphasis>eventType</emphasis> to advance functionality, or through
        schema modification it is possible to add additional elements capable
        of handling a wider range of actions.  Extensions that modify the schema
        for a given service should be careful to not change the themes presented
        in this protocol specification.  It is imperative that all services
        respect the basic functionality in their quest to add new features.
      </para>
      
      <section id="protocol_extension_eventType" xreflabel="eventType Extension">
        <title>eventType Extension</title>
      
        <para>
          The current accepted <emphasis>eventType</emphasis> for the 
          <emphasis>Echo Protocol</emphasis>'s <command>EchoRequest</command> 
          message is 
          <command>http://schemas.perfsonar.net/tools/admin/echo/2.0</command>.
          This action must be accepted by all services.  By adding additional
          <emphasis>eventType</emphasis>s with the same format it is possible to
          extract additional information via a service.
        </para>
        
        <para>
          Consider  simple service <command>X</command>.  The designer of this
          service wishes to create a special behaviour for specific
          <emphasis>eventType</emphasis>s.  The following new
          <emphasis>eventType</emphasis>s are added to his service code (and to
          his implementation of the schema):
        </para>
        
        <itemizedlist mark='opencircle'>
          <listitem>
            <para>
              <command>http://schemas.perfsonar.net/tools/admin/echo/X/2.0</command> - 
              Allows service contact information to be returned via 
              <emphasis>nmwgr:datum</emphasis>
            </para>
            <para>
              <command>http://schemas.perfsonar.net/tools/admin/echo/X/contact/2.0</command> - 
              Allows service contact information to be returned via 
              <emphasis>nmwgr:datum</emphasis>
            </para>
            <para>
              <command>http://schemas.perfsonar.net/tools/admin/echo/X/stats/2.0</command> - 
              Allows service usage statistics to be returned via 
              <emphasis>nmwgr:datum</emphasis>
            </para>
            <para>
              <command>http://schemas.perfsonar.net/tools/admin/echo/X/db/2.0</command> - 
              Allows a basic database test to be performed, the results of which
              are returned via <emphasis>nmwgr:datum</emphasis>
            </para>
          </listitem>
        </itemizedlist>  
        
        <para>
          By simply allow some additional string matching to occur in the
          <emphasis>eventType</emphasis> it is now possible to receive additional
          data to check the health of the system.  
        </para>

      </section>       

      <section id="protocol_extension_other" xreflabel="Other Extensions">
        <title>Other Extensions</title>
      
        <para>
          Similar to the above approach, it is possible to extend the schema
          by adding additional elements to increase functionality.  Individuals
          pursuing this route should be comfortable with schema design in 
          general and the layout of the <emphasis>NM-WG</emphasis> schema
          descriptions specifically.
        </para>

        <para>
          A simple extension involves allowing the commonly used 
          <emphasis>parameters</emphasis> structure to reside in the
          <xref linkend="request_schema_message" /> of the
          <command>EchoRequest</command> message.  This modification is
          presented below.
        </para>
        
        <programlisting>
          <![CDATA[
            namespace nmwg="http://ggf.org/ns/nmwg/base/2.0/"

            start = 
              element nmwg:message { 
                attribute id { xsd:string } &
                attribute type {
                  "EchoRequest" |
                  "http://schemas.perfsonar.net/messages/EchoRequest/1.0"
                } &
                element nmwg:metadata {
                  attribute id { xsd:string } &
                  element nmwg:eventType { 
                    "http://schemas.perfsonar.net/tools/admin/echo/2.0"
                  } &
                  element nmwg:parameters {
                    element nmwg:parameter {
                      attribute name { xsd:string }
                    }
                  }?
                } &
                element nmwg:data {
                  attribute id { xsd:string } &
                  attribute metadataIdRef { xsd:string }
                }
              }
          ]]>
        </programlisting> 
        
        <para>
          Building on the example in 
          <xref linkend="protocol_extension_eventType" />, the following example
          message shows how to ask for similar information as previously
          described.
        </para>
        
        <programlisting>
          <![CDATA[
            <?xml version="1.0" encoding="UTF-8"?>
            <nmwg:message type="http://schemas.perfsonar.net/messages/EchoRequest/1.0"
                          id="message.96587"
                          xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
 
              <nmwg:metadata id="metadata.21324">
                <nmwg:eventType>
                  http://schemas.perfsonar.net/tools/admin/echo/2.0
                </nmwg:eventType>
                <nmwg:parameters>
                  <nmwg:parameter name="status" />
                </nmwg:parameters>
              </nmwg:metadata>
 
              <nmwg:data id="data.54365" metadataIdRef="metadata.21324"/>
 
            </nmwg:message>
          ]]>
        </programlisting>         
        
        <para>
          While this method does require some additional schema modification, 
          the result produced is the same as described in 
          <xref linkend="protocol_extension_eventType" />.  An important
          consideration is the inclusion of <emphasis>parameters</emphasis>
          in an <command>EchoRequest</command> 
        </para>
        
      </section>  
    
      <para>
        It is important to note that the extension methods proposed here
        preserve the underlying base protocol completely.  Existing services
        that provide strict validation may reject messages that do not fit this
        standard explicitly, so be sure to design client applications
        appropriately.  
      </para>
    
    </section>  
    
  </section> 

  <glossary id="glossary">
    <title>Terms</title>

    <glossdiv id="A">
      <title>A</title>    
    </glossdiv> 
    
    <glossdiv id="B">
      <title>B</title>    
    </glossdiv> 
    
    <glossdiv id="C">
      <title>C</title>    
      <glossentry id="characteristic" xreflabel="characteristics"><glossterm>characteristic</glossterm>
        <glossdef>
          <para>Taken on the context of networking, these describe the 
          intrinsic properties of a portion of the network that are related 
          to the performance and reliability of the network.  See 
          <ulink url="http://www.ggf.org/documents/GFD.23.pdf">http://www.ggf.org/documents/GFD.23.pdf</ulink> 
          for more information.</para>
        </glossdef>
      </glossentry> 
      <glossentry id="chaining"><glossterm>chaining</glossterm>
        <glossdef>
          <para>
            The process of linking together elements in the 
            <xref linkend="NMWG" /> XML specification.
          </para>
        </glossdef>
        <glossseealso otherterm="filter_chaining">filter chaining</glossseealso>
        <glossseealso otherterm="merge_chaining">merge chaining</glossseealso>
      </glossentry>   
    </glossdiv> 
    
    <glossdiv id="D">
      <title>D</title> 
      <glossentry id="data"><glossterm>data</glossterm>
        <glossdef>
          <para>An <xref linkend="NMWG" /> XML block used 
          to store dynamic information, such as the results of a measurement.</para>
        </glossdef>
      </glossentry>        
    </glossdiv> 
    
    <glossdiv id="E">
      <title>E</title>    
    </glossdiv> 
    
    <glossdiv id="F">
      <title>F</title>  
      <glossentry id="filter_chaining" xreflabel="filter chaining"><glossterm>filter chaining</glossterm>
        <glossdef>
          <para>
            Chaining operation that is akin to performing advanced selection or 
            aggregation on a dataset.
          </para>
        </glossdef>
        <glossseealso otherterm="chaining">chaining</glossseealso>
        <glossseealso otherterm="merge_chaining">merge chaining</glossseealso>
      </glossentry>        
    </glossdiv> 
    
    <glossdiv id="G">
      <title>G</title>    
    </glossdiv> 
    
    <glossdiv id="H">
      <title>H</title>           
    </glossdiv> 
    
    <glossdiv id="I">
      <title>I</title>  
      <glossentry id="ICMP"><glossterm>ICMP</glossterm>
        <glossdef>
          <para>
            The Internet Control Message Protocol (ICMP) is a communications
            protocol used in computer networking. The main use of this format
            is by networked devices to send error and status messages.
          </para>
        </glossdef>
      </glossentry>           
    </glossdiv> 
    
    <glossdiv id="J">
      <title>J</title>    
    </glossdiv> 
    
    <glossdiv id="K">
      <title>K</title>    
    </glossdiv> 
    
    <glossdiv id="L">
      <title>L</title>    
    </glossdiv> 
    
    <glossdiv id="M">
      <title>M</title>     
      <glossentry id="merge_chaining" xreflabel="merge chaining"><glossterm>merge chaining</glossterm>
        <glossdef>
          <para>
            Chaining that combines linked metadata items into a new 
            representation.
          </para>
        </glossdef>
        <glossseealso otherterm="filter_chaining">filter chaining</glossseealso>
        <glossseealso otherterm="chaining">chaining</glossseealso>
      </glossentry>   
      <glossentry id="metadata"><glossterm>metadata</glossterm>
        <glossdef>
          <para>An <xref linkend="NMWG" /> XML block used 
          to store static information, such as the specific parameters of a 
          measurement.</para>
        </glossdef>
      </glossentry>     
    </glossdiv> 
    
    <glossdiv id="N">
      <title>N</title>  
      <glossentry id="NMWG"><glossterm>NM-WG</glossterm>
        <glossdef>
          <para>The performance of most grid applications is dependent on the 
          performance of the networks forming the grid. The Network 
          Measurements Working Group (NMWG) identifies network metrics 
          (aka <xref linkend="characteristic" />) useful to grid applications 
          and middleware, and develops standard mechanisms to describe and 
          publish these characteristics to the Grid.</para>
        </glossdef>
      </glossentry>   
    </glossdiv> 
    
    <glossdiv id="O">
      <title>O</title>    
    </glossdiv> 
    
    <glossdiv id="P">
      <title>P</title> 
      <glossentry id="ping"><glossterm>ping</glossterm>
        <glossdef>
          <para>
            Computer network tool used to test whether a particular host is 
            reachable across an IP network. It works by sending 
            <xref linkend="ICMP" /> "echo request" packets to the target 
            host and listening for <xref linkend="ICMP" /> "echo response" 
            replies. 
          </para>
        </glossdef>
      </glossentry>        
    </glossdiv>
    
    <glossdiv id="Q">
      <title>Q</title>    
    </glossdiv> 
    
    <glossdiv id="R">
      <title>R</title>  
    </glossdiv> 
    
    <glossdiv id="S">
      <title>S</title>  
      <glossentry id="schema"><glossterm>schema</glossterm>
        <glossdef>
          <para>XML specification, normally written in XML.</para>
        </glossdef>
        <glossseealso otherterm="schemata">schemata</glossseealso>
      </glossentry>   
      <glossentry id="schemata"><glossterm>schemata</glossterm>
        <glossdef>
          <para>Plural of schema.</para>
        </glossdef>
        <glossseealso otherterm="schema">schema</glossseealso>
      </glossentry>         
      <glossentry id="SOA"><glossterm>SOA</glossterm>
        <glossdef>
          <para>
            Service Oriented Architecture (SOA) is a software architectural 
            style that allows applications (services) to communicate and interact
            regardless of the environment or implementation.  
          </para>
        </glossdef>
      </glossentry>    
    </glossdiv> 
    
    <glossdiv id="T">
      <title>T</title>    
    </glossdiv> 
    
    <glossdiv id="U">
      <title>U</title>  
    </glossdiv> 
    
    <glossdiv id="V">
      <title>V</title>    
    </glossdiv> 
    
    <glossdiv id="W">
      <title>W</title>    
    </glossdiv> 
    
    <glossdiv id="X">
      <title>X</title>  
    </glossdiv> 
    
    <glossdiv id="Y">
      <title>Y</title>    
    </glossdiv> 
    
    <glossdiv id="Z">
      <title>Z</title>    
    </glossdiv>
     
  </glossary>


  <bibliography id="bibliography">
    <title>References</title>



    <biblioentry xreflabel="Result Codes">
      <abbrev>Result Codes</abbrev>
      <title>
        <ulink url="http://wiki.perfsonar.net/jra1-wiki/index.php/Result_codes">Result Codes</ulink>
      </title>
    </biblioentry>

    <biblioentry xreflabel="Multi-Schema XML Validator">
      <abbrev>MSV</abbrev>
      <title>
        <ulink url="https://msv.dev.java.net/">Sun Multi-Schema XML Validator (MSV)</ulink>
      </title>
    </biblioentry>
    
    <biblioentry xreflabel="Trang">
      <abbrev>Trang</abbrev>
      <title>
        <ulink url="http://www.thaiopensource.com/relaxng/trang.html">Multi-format schema converter based on RELAX NG</ulink>
      </title>
    </biblioentry>

    <biblioentry xreflabel="NM-WG Schema">
      <abbrev>NMWG-Schema</abbrev>
      <title>
        <ulink url="http://nmwg.internet2.edu/nm-schema-base.html">NMWG Base Schema</ulink>
      </title>
    </biblioentry>

    <biblioentry xreflabel="RELAX-NG">
      <abbrev>RELAX-NG</abbrev>
      <title>
        <ulink url="http://relaxng.org/">RELAX-NG Schema Language</ulink>
      </title>
    </biblioentry>

    <biblioentry xreflabel="SmokePing">
      <abbrev>SmokePing</abbrev>
      <title>
        <ulink url="http://oss.oetiker.ch/smokeping/">SmokePing latency measurement tool</ulink>
      </title>
    </biblioentry>

    <biblioentry xreflabel="NM-WG">
      <abbrev>NM-WG</abbrev>
      <title>
        <ulink url="http://nmwg.internet2.edu">Network Measurements Working Group</ulink>
      </title>
    </biblioentry>
    
    <biblioentry xreflabel="perfSONAR">
      <abbrev>perfSONAR</abbrev>
      <title>
        <ulink url="http://www.perfsonar.net">perfSONAR</ulink>
      </title>
    </biblioentry>  
    
    <biblioentry xreflabel="XML">
      <abbrev>XML</abbrev>
      <title>
        <ulink url="http://www.w3.org/XML">Extensible Markup Language (XML)</ulink>
      </title>
    </biblioentry>
    
    <biblioentry xreflabel="OGF">
      <abbrev>OGF</abbrev>
      <title>
        <ulink url="http://www.ogf.org/">(Global|Open) Grid Forum</ulink>
      </title>
    </biblioentry>

    <biblioentry xreflabel="perfSONAR-UI">
      <abbrev>perfSONAR-UI</abbrev>
      <title>
        <ulink url="http://perfsonar.acad.bg/">perfSONAR-UI</ulink>
      </title>
    </biblioentry> 

    <biblioentry xreflabel="A Scalable Framework for Representation and Exchange of Network Measurements">
      <abbrev>Zurawski06Scalable</abbrev>
      <title>A Scalable Framework for Representation and Exchange of Network Measurements</title>
      <authorgroup>
        <author><personname>
          <firstname>J.</firstname><surname>Zurawski</surname>
        </personname></author>
        <author><personname>
          <firstname>M.</firstname><surname>Swany</surname>
        </personname></author>
        <author><personname>
          <firstname>D.</firstname><surname>Gunter</surname>
        </personname></author>
      </authorgroup>
      <confgroup>
        <confdates>March, 2006</confdates>
        <conftitle>2nd International IEEE/Create-Net Conference on Testbeds and Research Infrastructures for the Development of Networks and Communities</conftitle>
        <address>Barcelona, Spain</address>
        <confsponsor>IEEE/Create-Net</confsponsor>
      </confgroup>
    </biblioentry>

    <biblioentry xreflabel="XSD">
      <abbrev>XSD</abbrev>
      <title>
        <ulink url="http://www.w3.org/XML/Schema">XML Schema</ulink>
      </title>
    </biblioentry> 

  </bibliography>

</article>
